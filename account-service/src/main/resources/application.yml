spring:
  application:
    name: account-service
  datasource:
    url: jdbc:mysql://localhost:3306/baas_db?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: baas_user
    password: baas_password
  jpa:
    database-platform: org.hibernate.dialect.MySQL8Dialect
    hibernate:
      ddl-auto: update
    show-sql: true
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: ${KEYCLOAK_JWK_SET_URI:http://localhost:8089/realms/baas/protocol/openid-connect/certs}
  #          issuer-uri: ${KEYCLOAK_ISSUER_URI:http://localhost:8089/realms/baas}
  cloud:
    function:
      definition: accountOpenCommand;processPaymentCommand
    stream:
      bindings:
        # User Onboarding Saga Commands
        accountOpenCommand-in-0:
          destination: account-open-command
          group: account-service
          content-type: application/json

        # User Onboarding Saga Events (outputs)
        accountOpenedEvent-out-0:
          destination: account-opened-event
          content-type: application/json
        accountOpenFailedEvent-out-0:
          destination: account-open-failed-event
          content-type: application/json

        # Other existing bindings
        processPaymentCommand-in-0:
          destination: process-payment-command
          group: account-service
          content-type: application/json
        paymentProcessedEvent-out-0:
          destination: payment-processed-event
          content-type: application/json
        paymentFailedEvent-out-0:
          destination: payment-failed-event
          content-type: application/json
      kafka:
        binder:
          brokers: ${SPRING_KAFKA_BOOTSTRAP_SERVERS:localhost:9092}

eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE:http://localhost:8761/eureka/}
  instance:
    prefer-ip-address: true
    hostname: localhost
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
server:
  port: 8081

logging:
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - [%X{correlationId}] %msg%n"
  level:
    org.apache.kafka: WARN
    org.springframework.kafka: WARN
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always

