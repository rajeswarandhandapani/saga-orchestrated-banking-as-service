spring:
  application:
    name: saga-orchestrator-service
  profiles:
    active:
    - dev
  datasource:
    url: jdbc:mysql://localhost:3306/baas_db?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: baas_user
    password: baas_password
  jpa:
    database-platform: org.hibernate.dialect.MySQL8Dialect
    hibernate:
      ddl-auto: update
    show-sql: true
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: ${KEYCLOAK_JWK_SET_URI:http://localhost:8089/realms/baas/protocol/openid-connect/certs}
          # issuer-uri: ${KEYCLOAK_ISSUER_URI:http://localhost:8089/realms/baas}
  cloud:
    function:
      definition: userCreatedEvent;userCreationFailedEvent;accountOpenedEvent;accountOpenFailedEvent;welcomeNotificationSentEvent;welcomeNotificationFailedEvent;userDeletedEvent;userDeletionFailedEvent
    stream:
      bindings:
        # Event listeners for UserOnboardingSaga
        userCreatedEvent-in-0:
          destination: user-created-event
          group: saga-orchestrator-group
          content-type: application/json
        userCreationFailedEvent-in-0:
          destination: user-creation-failed-event
          group: saga-orchestrator-group
          content-type: application/json
        accountOpenedEvent-in-0:
          destination: account-opened-event
          group: saga-orchestrator-group
          content-type: application/json
        accountOpenFailedEvent-in-0:
          destination: account-open-failed-event
          group: saga-orchestrator-group
          content-type: application/json
        welcomeNotificationSentEvent-in-0:
          destination: welcome-notification-sent-event
          group: saga-orchestrator-group
          content-type: application/json
        welcomeNotificationFailedEvent-in-0:
          destination: welcome-notification-failed-event
          group: saga-orchestrator-group
          content-type: application/json
        userDeletedEvent-in-0:
          destination: user-deleted-event
          group: saga-orchestrator-group
          content-type: application/json
        userDeletionFailedEvent-in-0:
          destination: user-deletion-failed-event
          group: saga-orchestrator-group
          content-type: application/json

        # Output bindings for saga commands (used by StreamBridge)
        createUserCommand-out-0:
          destination: create-user-command
        deleteUserCommand-out-0:
          destination: delete-user-command
        accountOpenCommand-out-0:
          destination: account-open-command
        sendNotificationCommand-out-0:
          destination: send-notification-command
        validatePaymentCommand-out-0:
          destination: validate-payment-command

      kafka:
        binder:
          brokers: ${KAFKA_BROKERS:localhost:9092}
server:
  port: 8090

eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE:http://localhost:8761/eureka/}
  instance:
    prefer-ip-address: true
    hostname: localhost
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}

logging:
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - [%X{correlationId}] %msg%n"
  level:
    org.apache.kafka: WARN
    org.springframework.kafka: WARN


